import express from 'express'
import cors from 'cors'
import dotenv from 'dotenv'
dotenv.config()

import authRoutes from "./routes/auth_routes.js";
import "./config/passport.js";
import { authenticateJWT } from './middlewares/auth.js';

const app = express()
const PORT = process.env.PORT || 5000

app.use(cors())
app.use(express.json())

app.use("/api/auth", authRoutes);

app.get('/', (req, res) => {
  res.send('‰º∫ÊúçÂô®ÈÅãË°å‰∏≠ üöÄ');
});

app.get('/api/hello', (req, res) => {
  res.json({ message: 'Hello from GDG Backend! We\'ll go from here now.' })
})

// ÈÄôÈÇäÊö´ÊôÇÁî®‰æÜÊ∏¨Ë©¶ JWT ÁöÑ middleware ‰πãÂæåÂèØÂà™ (postman Ê∏¨ÈÅé‰∫ÜÂèØË°å 04/28 4:14)
app.get('/api/test', authenticateJWT, (req, res) =>{
  res.json({
    message: "Â∑≤Á∂ìÈÄöÈÅéJWTË∫´‰ªΩÈ©óË≠â",
    user: req.user
  });
})

const startServer = (port) => {
  const server = app.listen(port, () => {
    console.log(`‚úÖ Server running on http://localhost:${port}`);
  });

  server.on('error', (err) => {
    if (err.code === 'EADDRINUSE') {
      console.log(`‚ö†Ô∏è Port ${port} is in use, trying port ${port + 1}...`);
      startServer(port + 1);
    } else {
      console.error(`‚ùå Server error: ${err.message}`);
    }
  });
};

startServer(PORT);
